package {{packageName}};

import com.fasterxml.jackson.core.type.TypeReference;
import io.vertx.core.Future;
import io.vertx.core.MultiMap;
import io.vertx.core.http.HttpMethod;
import kos.core.client.AutoGeneratedRestClient;
import kos.core.client.RestClientConfiguration;

/**
 * Auto generated rest client for {@link {{packageName}}.{{simpleName}}}.
 */
@{{jdkGeneratedAnnotation}}("kos.apt.rest.RestClientProcessor")
class {{className}} extends AutoGeneratedRestClient implements {{importantSuperClassOrInterface}} {

    {{className}}(RestClientConfiguration configuration) {
        super(configuration);
    }

    {{#methods}}
    {{#httpPath}}
    {{#typeReference}}
    private static final TypeReference<{{{mappedType}}}> {{name}} =
        new TypeReference<{{{mappedType}}}>() {};

    {{/typeReference}}
    public {{{responseType}}} {{name}}(
        {{#parameters}}{{^first}},{{/first}}{{{data.type}}} {{data.variableName}}{{/parameters}}
    ) {
        {{^containsDefinedHeaders}}
        final MultiMap headers = configuration.getHeaders();
        {{/containsDefinedHeaders}}
        {{#containsDefinedHeaders}}
        final MultiMap headers = createEmptyHeaders()
        {{#definedHeaders}}
            .add("{{headerName}}", {{variableWithHeaderValue}})
        {{/definedHeaders}}
        ;
        {{/containsDefinedHeaders}}
        final String uri = "{{.}}"
        {{#replaceablePathParams}}
            .replace(":{{pathParam}}", configuration.getStringConverter().asString({{pathVariable}}))
        {{/replaceablePathParams}}
        ;

        {{#containsResponseType}}return {{/containsResponseType}}
        {{#containsRequestPayload}}send{{/containsRequestPayload}}{{^containsRequestPayload}}execute{{/containsRequestPayload}}(
            HttpMethod.{{httpMethod}}, uri, headers, {{#containsRequestPayload}}{{variableWithRequestPayload}},{{/containsRequestPayload}}
            {{#typeReference}}{{name}}{{/typeReference}}{{^typeReference}}{{unwrappedResponseType}}.class{{/typeReference}});
    }

    {{/httpPath}}
    {{/methods}}

}
